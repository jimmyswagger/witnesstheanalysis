
#Add Involment to Playerstats
passA <- pass%>%filter(Teamnum == "A")

passA <- passA[passA$main!="Spoil Off", ]
passA <- passA[passA$main!="Def Act", ]
passA <- passA[passA$main!="Tck Def", ]
passA <- passA[passA$main!="Free Loss", ]
passA <- passA[passA$main!="Tck End", ]
passA <- passA[passA$main!="Tck Att", ]
passA <- passA[passA$main!="Tck Att Ndp", ]
passA <- passA[passA$main!="Opp Brk", ]

passA = passA %>% 
   unite(plynumname, Player, plyname, sep = " ", remove = FALSE)

teamAplyrpossns <- passA%>%group_by(Player, poss) %>% filter(Teamnum == "A", main == "PW"| main == "Ko Rec"| main == "Rec Op"| 
main == "Rec Rs"|main == "Pass Rs"|main == "Ko"|main == "Shot Rs")%>%select(Player, poss)

teamAplyr <-dplyr::distinct(teamAplyrpossns) 

teamAplyr <-teamAplyr%>%group_by(Player)%>%select(Player,poss)%>%summarize(count=n())  

plystatsA <- plystatsA %>%  mutate(TotInvl = VLOOKUP(ply,teamAplyr,Player,count))


passA <- pass%>%filter(Teamnum == "A")

passA <- passA[passA$main!="Spoil Off", ]
passA <- passA[passA$main!="Def Act", ]
passA <- passA[passA$main!="Tck Def", ]
passA <- passA[passA$main!="Free Loss", ]
passA <- passA[passA$main!="Tck End", ]
passA <- passA[passA$main!="Tck Att", ]
passA <- passA[passA$main!="Tck Att Ndp", ]
passA <- passA[passA$main!="Opp Brk", ]

passA = passA %>% 
   unite(plynumname, Player, plyname, sep = " ", remove = FALSE)

#id poss with shots
pashscr <- passA%>%group_by(Team, Action) %>% filter(main  == "Shot Op Oc"|main =="Shot Rs Oc")

#Pulls out all of the poss
teamsht <- subset(passA,poss%in%pashscr$poss)
 
teamAsht<- teamsht%>%group_by(poss) %>% filter(Teamnum == "A")%>%select(Player,poss)

teamAshtA <-dplyr::distinct(teamAsht)

teamAshtA<- teamAshtA %>%group_by(Player)%>%select(Player,poss)%>%summarize(count=n()) 

plystatsA <- plystatsA %>%  mutate(ShtInvl = VLOOKUP(ply,teamAshtA,Player,count))

passA <- pass%>%filter(Teamnum == "A")

passA <- passA[passA$main!="Spoil Off", ]
passA <- passA[passA$main!="Def Act", ]
passA <- passA[passA$main!="Tack Def", ]
passA <- passA[passA$main!="Free Loss", ]
passA <- passA[passA$main!="Tack Def Ndp", ]
passA <- passA[passA$main!="Sht Prs", ]
passA <- passA[passA$main!="Opp Brk", ]


passA = passA %>% 
   unite(plynumname, Player, plyname, sep = " ", remove = FALSE)

#id poss with shots
pashscr <- passA%>%group_by(Team, Action) %>% filter(subset  == "Scr Op"|subset =="Scr Rs")

#Pulls out all of the poss
teamscr <- subset(passA,poss%in%pashscr$poss)

#6Player Score Link - By vop
plyrscrinv <- teamscr%>%group_by(Player, poss) %>% filter(main == "PW"| main == "Ko Rec"| main == "Rec Op"| main == "Rec Rs"|main == "Pass Rs"|main == "Ko"|main == "Shot Rs")%>%select(Player, poss)

teamAscrA <-dplyr::distinct(plyrscrinv)

teamAscrA<- teamAscrA %>%group_by(Player)%>%select(Player,poss)%>%summarize(count=n()) 

plystatsA <- plystatsA %>%  mutate(ScrInvl = VLOOKUP(ply,teamAscrA,Player,count))

plystatsA <- plystatsA  %>%  mutate(nonshot= (TotInvl - (ShtInvl + ScrInvl))) 

plystatsA 

#Chart

plystatsAinvl <- plystatsA %>% select (Player,nonshot,ShtInvl,ScrInvl)

plystatsAinvlA <- plystatsAinvl %>% gather(key = Invol, value = value, nonshot:ScrInvl)
plystatsAinvlA

q <- ggplot(data = plystatsAinvlA, aes(x = Player, y = value, fill = Invol))

q +geom_bar(width=.7, stat = "identity", aes(x = Player, y = value, fill = Invol)) +
  xlab("Player") + ylab("Count") +
  ggtitle("Player Involvement") +
  theme_bw() + theme (panel.grid.major = element_blank(),
panel.grid.minor = element_blank()) +
geom_text(aes(label = value, group =Invol), color = "white")  +
 theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))


# Player report

Entry_45 <- sop %>%group_by(Team) %>% filter (Entry_45 == "Y") %>%summarize(Entry_45 = sum (Entry_45 == "Y"), Shots = sum(mainoc %in% c("Shot Op Oc","Shot Rs Oc")),
Shot_Perc =(Shots/Entry_45 *100), Scores = sum(subsetoc %in% c("Scr Op","Scr Rs")),AttEff = (Scores/Entry_45 *100))

library(plyr)

Entry_45 <- rename(Entry_45, c( Entry_45 = "Entry into 45",Shot_Perc = "Shot% per Entry",AttEff = "Score% per Entry"))

detach(package:plyr)

formattable (Entry_45, align = c("l", rep("c", NCOL(Entry_45) - 1)))