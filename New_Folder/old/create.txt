#load libraries
#if you havent installed them go to packages - install and then type in package name
library(dplyr)
library(ggplot2)
library(ggrepel)
library(RColorBrewer)


#basic features can be set to true or false allowing for two pitches to be made
#this pitch as lines for sections when fales is selected

#This part tells r what order things are in when it comes to creating the pitch

create_Stats_Pitch <- function(grass_colour, line_colour, background_colour, goala_colour,goalb_colour,label_colour, BasicFeatures){

#themes are useful as you dont have to keep entering them fully into the code
#this theme allows you to start with a blank grid  

  theme_blankPitch = function(size=12) { 
    theme(
      #axis.line=element_blank(), 
      axis.text.x=element_blank(), 
      axis.text.y=element_blank(), 
      #axis.ticks.y=element_text(size=size),
      #axis.ticks=element_blank(),
      axis.ticks.length=unit(0, "lines"), 
      #axis.ticks.margin=unit(0, "lines"), 
      axis.title.x=element_blank(), 
      axis.title.y=element_blank(), 
      legend.key.size=unit(1.2, "lines"), 
      legend.text=element_text(size=size), 
      legend.title=element_text(size=size, face="bold",hjust=0),
      # panel.border=element_blank(), 
      panel.grid.major=element_blank(), 
      panel.grid.minor=element_blank(), 
      panel.spacing=element_blank(), 
      plot.margin=unit(c(0, 0, 0, 0), "lines"), 
      plot.title=element_text(size=size*1.2), 
      panel.background=element_rect(fill= background_colour,colour= background_colour),
      strip.text.x=element_text(size=size*1))}

  #Set the outer limits of the pitch you can change these based on pitch measurements 
  ymin <- 0 # minimum width
  ymax <- 98 # maximum width
  xmin <- 0 # minimum length
  xmax <- 144 # maximum length
  
  #Lines on pitch 
  defel <- 0
  def14 <- 13
  def21 <- 20
  def45 <- 45
  def65 <- 65
  off65 <- 79
  off45 <- 99
  off21 <- 124
  off14 <- 131
  offel <- 144
  
  #small sqaure

  sixYardrd <- 42
  sixYardld <- 56
  sixYardDefxst <- 4.5
  sixYardOffxst <- 139.5

  #13 box
  right14d <- 39.5
  left14d <- 58.5

  #halfway line
  hwxst <- 72.5
  hwyst <- 45.75
  hwxed <- 72.5
  hwyed <- 52.25

  #pen spot

  pdxst <- 11
  pdyst <- 48.5
  pdxed <- 11
  pdyed <- 49.5

  poxst <- 133
  poyst <- 48.5
  poxed <- 133
  poyed <- 49.5

# Defining features along the length
  srwing <- 19.6
  rhalfsp <- 39.2
  ctre <- 58.8
  lhalfsp <- 78.4
  
# creating semi circles	  
  circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] + diameter / 2 * cos(tt), 
               y = center[2] + diameter / 2 * sin(tt))
  }
  
  circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] - diameter / 2 * cos(tt), 
               y = center[2] - diameter / 2 * sin(tt))
  }
 
  def_circle <-  circleFundef(c(20,49.5), 26, start=1.5, end=2.5)
  att_circle <-  circleFunatt(c(124,49.5), 26, start=1.5, end=2.5)
  
  if(BasicFeatures == TRUE){
    ## initiate the plot, set some boundries to the plot
    np <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin,ymax)) +
      # add the theme 
      theme_blankPitch() +
      # add pitch details
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) + 
      #telling r where to start and end the lines based on the parameters set earlier
      geom_segment(aes(x = def14, y = ymin, xend = def14, yend = ymax),colour = line_colour,linetype="solid") +   
      geom_segment(aes(x = def21, y = ymin, xend = def21, yend = ymax),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = def45, y = ymin, xend = def45, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = def65, y = ymin, xend = def65, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off65, y = ymin, xend = off65, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off45, y = ymin, xend = off45, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off21, y = ymin, xend = off21, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off14, y = ymin, xend = off14, yend = ymax),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = right14d, xend = def14, yend = right14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = left14d, xend = def14, yend = left14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = right14d, xend = off14, yend = right14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = left14d, xend = off14, yend = left14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = hwxst, y = hwyst, xend = hwxed, yend = hwyed),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = xmin, y = sixYardrd, xend = sixYardDefxst, yend = sixYardrd),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = sixYardld, xend = sixYardDefxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = sixYardDefxst, y = sixYardrd, xend = sixYardDefxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = xmax, y = sixYardrd, xend = sixYardOffxst, yend = sixYardrd),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = sixYardld, xend = sixYardOffxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = sixYardOffxst, y = sixYardrd, xend = sixYardOffxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = pdxst, y = pdyst, xend = pdxed, yend = pdyed),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = poxst, y = poyst, xend = poxed, yend = poyed),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.25),colour = goala_colour, size = 2) +
      geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = goalb_colour, size = 2) +
      geom_path(data=def_circle, aes(x,y), colour = line_colour,size = 0.5) +
      geom_path(data=att_circle, aes(x,y), colour = line_colour,size = 0.5) + 
      #annotate allows you to add text to the pitch
      annotate(geom="text", x= 21.3, y=1.25, label="21",color = label_colour) +
      annotate(geom="text", x= 46.3, y=1.25, label="45",color = label_colour) +
      annotate(geom="text", x= 66.3, y=1.25, label="65",color = label_colour) +
      annotate(geom="text", x= 80.3, y=1.25, label="65",color = label_colour) +
      annotate(geom="text", x=100.3, y=1.25, label="45", color=label_colour) +
      annotate(geom="text", x=125.3, y=1.25, label="21",color = label_colour) +
      annotate(geom="text", x= 72, y=4, label="www.witnesstheanalysis.com",color = "white",size = 6, alpha = 0.4) +
      annotate(geom="text", x= 72, y=96, label="www.witnesstheanalysis.com",color = "white",size = 6, alpha = 0.4)
    
  }
  
  else{
    ## this pitch has dotted lines to indicate sections 
     np <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin,ymax)) +
      # add the theme 
      theme_blankPitch() +
      # add halway line
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) + 
      geom_segment(aes(x = def14, y = ymin, xend = def14, yend = ymax),colour = line_colour,linetype="solid") +   
      geom_segment(aes(x = def21, y = ymin, xend = def21, yend = ymax),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = def45, y = ymin, xend = def45, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = def65, y = ymin, xend = def65, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off65, y = ymin, xend = off65, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off45, y = ymin, xend = off45, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off21, y = ymin, xend = off21, yend = ymax),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = off14, y = ymin, xend = off14, yend = ymax),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = right14d, xend = def14, yend = right14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = left14d, xend = def14, yend = left14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = right14d, xend = off14, yend = right14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = left14d, xend = off14, yend = left14d),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = hwxst, y = hwyst, xend = hwxed, yend = hwyed),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = xmin, y = sixYardrd, xend = sixYardDefxst, yend = sixYardrd),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmin, y = sixYardld, xend = sixYardDefxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = sixYardDefxst, y = sixYardrd, xend = sixYardDefxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = xmax, y = sixYardrd, xend = sixYardOffxst, yend = sixYardrd),colour = line_colour,linetype="solid") + 
      geom_segment(aes(x = xmax, y = sixYardld, xend = sixYardOffxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = sixYardOffxst, y = sixYardrd, xend = sixYardOffxst, yend = sixYardld),colour = line_colour,linetype="solid") +
      geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.25),colour = goala_colour, size = 2) +
      geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = goalb_colour, size = 2) +
      geom_segment(aes(x = xmin, y = srwing, xend = xmax, yend = srwing),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = rhalfsp, xend = xmax, yend = rhalfsp),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = ctre, xend = xmax, yend = ctre),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = lhalfsp, xend = xmax, yend = lhalfsp),colour = line_colour,linetype="dotted") +
      geom_path(data=def_circle, aes(x,y), colour = line_colour,size = 0.5) +
      geom_path(data=att_circle, aes(x,y), colour = line_colour,size = 0.5) + 
      annotate(geom="text", x= 21, y=1.2, label="21",color = label_colour) +
      annotate(geom="text", x= 46, y=1.2, label="45",color = label_colour) +
      annotate(geom="text", x= 66, y=1.2, label="65",color = label_colour) +
      annotate(geom="text", x= 80, y=1.2, label="65",color = label_colour) +
      annotate(geom="text", x=100, y=1.2, label="45", color=label_colour) +
      annotate(geom="text", x=125, y=1.2, label="21",color = label_colour) +
      annotate(geom="text", x= 72, y=4, label="www.witnesstheanalysis.com",color = "white",size = 3, alpha = 0.4) +
      annotate(geom="text", x= 72, y=96, label="www.witnesstheanalysis.com",color = "white",size = 3, alpha = 0.4)
  }
  
  return(np)}

#you can change these to whatever colours you like it follows the order of the create_Stats_Pitch at the start
#change BasicFeatures=TRUE to FALSE to get the second pitch  

np <- create_Stats_Pitch("#A2CD5A", "white", "white", "blue","red", BasicFeatures=TRUE)

#np saves all the above to allow you to create the pitch when required
#you can change np to a different name if you like  

#show pitch
np

#show pitch two
wp <- create_Stats_Pitch("#A2CD5A", "white", "black", "blue","red","white", BasicFeatures=FALSE)

wp


#using the pitch 

#create a data frame by saving the table to excel (copy and paste to notebook first)
#you can edit the contents of the table in excel to show different things 

#copy the file path from the folder change the \ to / and you may also need to change the ; to ,
shots <- read.csv(file="c:/pathtofile.csv", header=TRUE, sep=";")
attach (shots)

#shots is the name for the data frame 
#head (shots) allows you to check what you have uploaded 
head (shots) 

#adding shots to the pitch 

#First create a list of colours for the Actions. This keeps them consistent through all plots (sets the scale_colour_manual)
#pch chart that shows shapes the correspond to the numbers (link chart)

  ocome <- c("Goal"= 15,
             "Point"= 16,
             "Miss"= 4,
             "Fk Goal" = 18,
             "Fk Point" = 17,
             "Fk Miss" = 3)
  
  teamcol <- c("A" = "red",
               "B" = "blue")


#Ading the shots to the pitch
#Both Teams
np + geom_point(data = shots, aes(x, y, colour = team, size = 8, shape = outcome, stroke = 1.5)) + 
  geom_text_repel(data = shots, aes(x, y, label = player, col = team), size = 8) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=15)) +
    theme(plot.title = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    ggtitle("Shots - Team A & B") +
    guides(shape = guide_legend(override.aes = list(size = 12)))

wp <- create_Stats_Pitch("#A2CD5A", "white", "orange", "blue","red", BasicFeatures=FALSE)

wp + geom_point(data = shots, aes(x, y, colour = team, size = 8, shape = outcome, stroke = 1.5)) + 
      scale_shape_manual(values = ocome) +
      scale_colour_manual(values = teamcol) +
  geom_text_repel(data = shots, aes(x, y, label = player, col = team), size = 8) +
    theme(legend.position="bottom", legend.title=element_text(size=10), 
          legend.text=element_text(size=10)) +
    guides(color = FALSE, size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 12)))

#Using filters to only show one team 
#Change the data to new dataframe name 
shotsA <- shots %>% filter(team == "A")

np + geom_point(data = shotsA, aes(x, y, colour = team, size = 6, shape = outcome, stroke = 1)) + 
      scale_shape_manual(values = ocome) +
      scale_colour_manual(values = teamcol) +
  geom_text_repel(data = shotsA, aes(x, y, label = player, col = team), size = 6) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=15)) + 
    ggtitle("Shots - Team A") + 
    theme(plot.title = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 12)))

#Using filters to only show one team & one player
 
shotsA13 <- shots %>% filter(team == "A", player == "13")

np + geom_point(data = shotsA13, aes(x, y, colour = team, size = 6, shape = outcome, stroke = 1)) + 
      scale_shape_manual(values = ocome) +
      scale_colour_manual(values = teamcol) +
  geom_text_repel(data = shotsA13, aes(x, y, label = player, col = team), size = 6) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=15)) + 
    ggtitle("Shots - Team A") + 
    theme(plot.title = element_text(hjust=0.5)) +
    guides(size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 12)))+
    guides(colour = guide_legend(override.aes = list(size = 12)))


#What each part does
#created pitch
np +
 #data frame, xy coords, if inside aes() colour, shape have to be a column, stroke = how thick you want the shapes to be 
 geom_point(data = shotsA13, aes(x, y, colour = team, size = 6, shape = outcome, stroke = 1)) +
 #you can manually change the colours/shape by moving them out side the aes() you will need to delete the scale manual lines 
 geom_point(data = shotsA13, aes(x, y, size = 6, shape = outcome, stroke = 1), colour = "red") +
 #these lines tell r that you want to use the colours/shape set out above  
      scale_shape_manual(values = ocome) +
      scale_colour_manual(values = teamcol) +
#text repel adds the labels to the shapes. it is useful when points are close together as it automatically moves them 
  geom_text_repel(data = shotsA13, aes(x, y, label = player, col = team), size = 6) +
#this tells r where the legend is to go and the size of the text
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=15)) + 
#Add a title and postion it 
    ggtitle("Shots - Team A") + 
    theme(plot.title = element_text(hjust=0.5)) +
#this tells r not to show the colours or selected size in the legend
    guides(color = FALSE, size = FALSE) +
#shows shapes in the leged
    guides(shape = guide_legend(override.aes = list(size = 12)))


#change to the guides to show the team colours 
np + geom_point(data = shots, aes(x, y, colour = team, size = 8, shape = outcome, stroke = 1.5)) + 
      scale_shape_manual(values = ocome) +
      scale_colour_manual(values = teamcol) +
  geom_text_repel(data = shots, aes(x, y, label = player, col = team), size = 8) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=15)) +
    theme(plot.title = element_text(hjust=0.5)) +
    guides(size = FALSE) +
    ggtitle("Shots - Team A & B") +
    guides(shape = guide_legend(override.aes = list(size = 12)))+
    guides(colour = guide_legend(override.aes = list(size = 12)))


