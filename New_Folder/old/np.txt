


```{r, fig.width = 16, fig.height = 10}

create_Stats_Pitch <- function(grass_colour, line_colour, background_colour, goal_colour, BasicFeatures){

  theme_blankPitch = function(size=12) { 
    theme(
      #axis.line=element_blank(), 
      axis.text.x=element_blank(), 
      axis.text.y=element_blank(), 
      #axis.ticks.y=element_text(size=size),
      #   axis.ticks=element_blank(),
      axis.ticks.length=unit(0, "lines"), 
      #axis.ticks.margin=unit(0, "lines"), 
      axis.title.x=element_blank(), 
      axis.title.y=element_blank(), 
      legend.background=element_rect(fill=background_colour, colour=NA), 
      legend.key=element_rect(colour=background_colour,fill=background_colour), 
      legend.key.size=unit(1.2, "lines"), 
      legend.text=element_text(size=size), 
      legend.title=element_text(size=size, face="bold",hjust=0),
      strip.background = element_rect(colour = background_colour, fill = background_colour, size = .5),
      panel.background=element_rect(fill=background_colour,colour=background_colour), 
      #       panel.border=element_blank(), 
      panel.grid.major=element_blank(), 
      panel.grid.minor=element_blank(), 
      panel.spacing=element_blank(), 
      plot.background=element_blank(), 
      plot.margin=unit(c(0, 0, 0, 0), "lines"), 
      plot.title=element_text(size=size*1.2), 
      strip.text.y=element_text(colour=background_colour,size=size,angle=270),   
      strip.text.x=element_text(size=size*1))}

circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
{
  tt <- seq(start*pi, end*pi, length.out=npoints)
  data.frame(x = center[1] + diameter / 2 * cos(tt), 
             y = center[2] + diameter / 2 * sin(tt))
}

circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
{
  tt <- seq(start*pi, end*pi, length.out=npoints)
  data.frame(x = center[1] - diameter / 2 * cos(tt), 
             y = center[2] - diameter / 2 * sin(tt))
}
#### create semi circle ####
  def_circle <-  circleFundef(c(20,49.5), 26, start=1.5, end=2.5)
  att_circle <-  circleFunatt(c(124,49.5), 26, start=1.5, end=2.5)


  
  ymin <- 0 # minimum width
  ymax <- 98 # maximum width
  xmin <- 0 # minimum length
  xmax <- 144 # maximum length
  
  # Defining features along the length
  defel <- 0
  def13 <- 13
  def20 <- 20
  def45 <- 45
  def65 <- 65
  off65 <- 79
  off45 <- 99
  off20 <- 124
  off13 <- 131
  offel <- 144
  right13d <- 39.5
  left13d <- 58.5
  rightssq <- 42
  leftssq <- 56
  
 
  if(BasicFeatures == TRUE){
    ## initiate the plot, set some boundries to the plot
    np <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin,ymax)) +
      # add the theme 
      theme_blankPitch() +
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) + 
      geom_segment(aes(x = def13, y = ymin, xend = def13, yend = ymax),colour = "white",linetype="solid") +   
      geom_segment(aes(x = def20, y = ymin, xend = def20, yend = ymax),colour = "white",linetype="solid") + 
      geom_segment(aes(x = def45, y = ymin, xend = def45, yend = ymax),colour = "blue",linetype="solid") +
      geom_segment(aes(x = def65, y = ymin, xend = def65, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off65, y = ymin, xend = off65, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off45, y = ymin, xend = off45, yend = ymax),colour = "red",linetype="solid") +
      geom_segment(aes(x = off20, y = ymin, xend = off20, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off13, y = ymin, xend = off13, yend = ymax),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmin, y = right13d, xend = def13, yend = right13d),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmin, y = left13d, xend = def13, yend = left13d),colour = "white",linetype="solid") +
      geom_segment(aes(x = xmax, y = right13d, xend = off13, yend = right13d),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmax, y = left13d, xend = off13, yend = left13d),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmin, y = rightssq, xend = 4.5, yend = rightssq),colour = "white",linetype="solid") +
      geom_segment(aes(x = xmin, y = leftssq, xend = 4.5, yend = leftssq),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 4.5, y = 42, xend = 4.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 42, xend = 139.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = rightssq, xend = xmax, yend = rightssq),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = leftssq, xend = xmax, yend = leftssq),colour = "white",linetype="solid") +
      geom_segment(aes(x = 72.5, y = 45.75, xend = 72.5, yend = 52.25),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.25),colour = "blue", size = 2) +
      geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = "red", size = 2) +
       annotate(geom="text", x= 13, y=1, label="13",color = "white", size = 6) +
      annotate(geom="text", x= 20, y=1, label="20",color = "white", size = 6) +
      annotate(geom="text", x= 45, y=1, label="45",color = "blue", size = 6) +
      annotate(geom="text", x= 65, y=1, label="65",color = "white", size = 6) +
      annotate(geom="text", x= 79, y=1, label="65",color = "white", size = 6) +
      annotate(geom="text", x=99, y=1, label="45", color="red", size = 6) +
      annotate(geom="text", x=124, y=1, label="20",color = "white", size = 6) +
       annotate(geom="text", x=131, y=1, label="13",color = "white", size = 6) +
      annotate("segment", x = 70, xend = 75, y = 0.75, yend = 0.75, colour = "pink", size=3, alpha=0.6, arrow=arrow()) +
      geom_path(data=def_circle, aes(x,y), colour = "white",size = 0.5) +
       geom_path(data=att_circle, aes(x,y), colour = "white",size = 0.5) 
    
      }
  
   else {
  
    np <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin-0.5,ymax+0.5))
      
    
  }
 
  
  return(np)}


np <- create_Stats_Pitch("#A2CD5A", "black", "#ffffff", "#000000", BasicFeatures=TRUE)

np


pass <- read.csv(file="c:/Users/donag/OneDrive/Spreadsheet fun/PA Analytics/PA Template/anyall.csv", header=TRUE, sep=";")
attach (pass)

np +
geom_point(data = pass, aes(x=Areax, y=Areay, colour = velocityband)) +
scale_colour_gradientn(colours = rainbow(7)) +
theme(legend.position="bottom")


pitch + transition_time(time)