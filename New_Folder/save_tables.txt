  scale_colour_manual(values = colshotvertpal) +
   scale_shape_manual(values = colshotshape) +
 theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=20)) +
    theme(plot.title = element_text(hjust=0.5)) +
    theme(plot.subtitle = element_text(hjust=0.5)) +
  labs(colour="Shot Type") +
    guides(color = FALSE, size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 10)),colour = guide_legend(override.aes = list(size = 10)))+
labs(colour="Shots", caption="Blue Shading = Shot Area, Green Shading = Score Area")+
 theme(plot.caption=element_text(size=18, hjust=0.5, face="bold", color="black")) +
      new_scale_color() 
   labs(title = game.players[i]) +


labs(colour="Outcome", title = "Worm") +
guides(shape = guide_legend(override.aes = list(size = 10)),colour = guide_legend(override.aes = list(size = 10))) +
  theme(legend.box="vertical", legend.margin=margin()) +
 theme(legend.position="bottom", legend.title=element_text(size=20),legend.text=element_text(size=20)) +
 labs(colour="Outcome", title = "Worm") + theme(plot.title=element_text(size=32, hjust=0.5, face="bold", color="black"))

+
    coord_flip() + scale_y_reverse()


kable(prsA, "html") %>%
  kable_styling("striped") %>%
  row_spec(1, color = "red") %>%
  save_kable("inst/test.pdf")


All_PossA   %>%
kbl(caption = "All_Poss", align = "c") %>%
kable_minimal() %>%
  save_kable("inst/test.pdf")



 All_PossA   %>%
kbl(caption = "All_Poss", align = "c") %>%
kable_minimal()%>%
  save_kable(file = "table_1.png")


 All_PossA   %>%
kbl(caption = "All_Poss", align = "c") %>%
kable_minimal()%>%
  cat(., file = "testaaa.png")


 All_PossA   %>%
kbl(caption = "All_Poss", align = "c") %>%
kable_minimal()%>%
  save_kable(file = "table_2.png",
             zoom = 1.5)


All_PossA %>%
 kbl(caption = "Player Tackles", align = "c") %>%
   kable_minimal() %>%
  save_kable(file = "table_8.png")

tcklpopAllAply %>%
 kbl(caption = "Player Tackles", align = "c") %>%
 kable_styling(bootstrap_options = c("striped", "hover")) %>%
  save_kable(file = "table_10.png")



tcklpopAllAply %>%
 kbl(caption = "Player Tackles", align = "c") %>%
 kable_styling(bootstrap_options = c("striped", "hover")) %>%
  save_kable(file = "table_10.png",
             zoom = 1.5)



tcklpopAllAply %>%
 kbl(caption = "Player Tackles", align = "c") %>%
 kable_styling(bootstrap_options = c("striped", "hover"))%>%
  as_image(file = "table_13.png",width = 8)


------------

sop <- sop %>% mutate(Pitch_Area_Rec =
ifelse(Pitch_Area_Rec == "In_Def","In Def" ,
ifelse(Pitch_Area_Rec == "Mid_Def" , "Mid Def",
ifelse(Pitch_Area_Rec == "Out_Def" , "Out Def",
ifelse(Pitch_Area_Rec == "Out_Att" , "Out Att",
ifelse(Pitch_Area_Rec == "Mid_Att" , "Mid Att",
ifelse(Pitch_Area_Rec == "In_Att" ,"In Att",sop$Pitch_Area_Rec)))))))

sop %>% mutate(Pitch_Area_Rec =
ifelse(Pitch_Area_Rec == "In_Def","In Def" ,
ifelse(Pitch_Area_Rec == "Mid_Def" , "Mid Def",
ifelse(Pitch_Area_Rec == "Out_Def" , "Out Def",
ifelse(Pitch_Area_Rec == "Out_Att" , "Out Att",
ifelse(Pitch_Area_Rec == "Mid_Att" , "Mid Att",
ifelse(Pitch_Area_Rec == "In_Att" ,"In Att",sop$Pitch_Area_Rec)))))))


sop %>% 
  mutate_all(funs(str_replace(., "In_Def", "In Def"),
                  str_replace(., "Mid_Def", "Mid Def")))


sop [sop =="In_Def"] <- "In Def"
sop [sop =="Mid_Def"] <- "In Def"
sop [sop =="Out_Def"] <- "In Def"
sop [sop =="Out_Att"] <- "Out Att"
sop [sop =="Mid_Att"] <- "Mid Att"
sop [sop =="In_Att"] <- "In Att"

solid 1 
dashed 2 
dotted 3
---------------------------------


 new_scale_color() + 
labs (colour = "Type",title = "Attacking Breaks Rec/Lost") +
scale_colour_manual(values = c(reccolply)) +
   theme(legend.position="bottom") +  theme(plot.title = element_text(hjust=0.5), legend.box="vertical", legend.margin=margin()) 
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=20)) +
    theme(plot.title = element_text(hjust=0.5)) +
    theme(plot.subtitle = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 10))) +