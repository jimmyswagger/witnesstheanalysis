#z scores 
dat <-  plystats%>%
    as_tibble() %>% 
    mutate_at(c("Pitch_Oc_Ko","mainoc","tot_poss_secs","secs","Entry_45","passno","plyinv","tot_dist","m_s","Pitch_Area_No","Pitch_Areaoc","subsetoc"), list(z = ~as.vector(scale(.))))

#plystatsAll <- dat

plystatsAll <- dat %>%select (-Pitch_Oc_Ko,-mainoc,-tot_poss_secs,-secs,-Entry_45,-passno,-plyinv,-tot_dist,-m_s,-Pitch_Area_No, -Pitch_Areaoc, -subsetoc)


# from sop
# create data frame
# change words to numbers
# select 


plystatspca <- read.csv(file="c:/Users/donagh/OneDrive/Spreadsheet fun/PA Analytics/PA Template/pcatest.csv", header=TRUE, sep=";")
attach (plystatspca)

plystats <- plystatspca %>% filter(Teamnum == "1")%>% select (-Teamnum)

#plystats <- plystatspca %>% filter(Teamnum == "1", Pitch_Area_No == "2")%>% select (-Teamnum, -Pitch_Area_No)

#z scores 
dat <-  plystats%>%
    as_tibble() %>% 
    mutate_at(c("Pitch_Oc_Ko", "Pitch_Area_Rec","mainoc","tot_poss_secs","secs","Entry_45","passno","plyinv","tot_dist","m_s","Pitch_Areaoc"), list(z = ~as.vector(scale(.))))

#plystatsAll <- dat

plystatsAll <- dat %>%select (-poss,-Pitch_Oc_Ko,-Pitch_Area_Rec,-mainoc,-tot_poss_secs,-secs,-Entry_45,-passno,-plyinv,-tot_dist,-m_s, -Pitch_Areaoc)

plystatsAll <- plystatsAll  %>%select (-tot_poss_secs_z,-Pitch_Oc_Ko_z,-mainoc_z,-Entry_45_z)

-----

### Cluster Analysis ###

#gap stat - ids how many clusters
fviz_nbclust(plystatsAll, kmeans,
             method = "gap_stat")

#kmeans cluster
km.res <- kmeans(plystatsAll, 5, nstart = 25)

# kmeans Visualize
fviz_cluster(km.res, data = plystatsAll, 
             ellipse.type = "convex",
             palette = "jco",
             repel = TRUE,
             ggtheme = theme_minimal())

#pam cluster
pam.res <- pam(plystatsAll, 5)
# Visualize
fviz_cluster(pam.res)


#Bar chart - Need to filter by clustered player groups and the average 
#q <- ggplot(data = plystatsAll, aes(x = Player, y = OpShot_z, fill = Player))

#q +geom_bar(width=.7, stat = "identity", aes(x =  Player, y = OpShot_z, fill = Player), position = "dodge") 

### PCA ###

#PCA - with arrows
res.pca <- prcomp(plystatsAll, scale = TRUE)


fviz_pca_biplot(res.pca, repel = TRUE,
                col.var = "#2E9FDF", # Variables color
                col.ind = "#696969"  # Individuals color
                )

#PCA
fviz_eig(res.pca)


fviz_pca_ind(res.pca,
             col.ind = "cos2", # Color by the quality of representation
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
             repel = TRUE     # Avoid text overlapping
             )