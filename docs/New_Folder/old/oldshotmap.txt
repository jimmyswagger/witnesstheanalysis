

library(shiny)
library(ggplot2)
library(ggrepel)

ui <- pageWithSidebar(
  headerPanel("witnesstheanalysis.com"),
  sidebarPanel(
    radioButtons("shot", "Shot", c("Left", "Right", "Fist/Punch")),
    radioButtons("team", "Team:", c("A", "B")),
    radioButtons("outcome", "Outcome:", c("Goal", "Point", "Miss")),
    selectInput("player", "Player:",
                list("Player" = list("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                     "14","15","16","17","18","19","20","21","22","23","24","25"))),
    actionButton("rem_point", "Remove"),
    width = 2),
  mainPanel(
    fluidRow( 
      column(width = 5,
             plotOutput("plot1", click = "plot_click")),
      column(2,offset = 5,
             tableOutput("table")))
    
  )
)

server = function(input, output){
  
  ## 1. set up reactive dataframe ##
  values <- reactiveValues()
  values$DT <- data.frame(x = numeric (),
                          y = numeric(),
                          shot = factor(),
                          team = factor(),
                          outcome = factor(),
                          player = factor())
  
  ##1.5 theme
  
  theme_blankPitch = function(size=12) { 
    theme(
      #axis.line=element_blank(), 
      axis.text.x=element_blank(), 
      axis.text.y=element_blank(), 
      #axis.ticks.y=element_text(size=size),
      #   axis.ticks=element_blank(),
      axis.ticks.length=unit(0, "lines"), 
      #axis.ticks.margin=unit(0, "lines"), 
      axis.title.x=element_blank(), 
      axis.title.y=element_blank(), 
      legend.key.size=unit(1.2, "lines"), 
      legend.text=element_text(size=size), 
      legend.title=element_text(size=size, face="bold",hjust=0),
      #       panel.border=element_blank(), 
      panel.grid.major=element_blank(), 
      panel.grid.minor=element_blank(), 
      panel.spacing=element_blank(), 
      plot.margin=unit(c(0, 0, 0, 0), "lines"), 
      plot.title=element_text(size=size*1.2), 
      panel.background=element_rect(fill="lightgreen",colour="lightgreen"),
      strip.text.x=element_text(size=size*1))}
  
  circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] + diameter / 2 * cos(tt), 
               y = center[2] + diameter / 2 * sin(tt))
  }
  
  circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] - diameter / 2 * cos(tt), 
               y = center[2] - diameter / 2 * sin(tt))
  }
  #### create semi circle ####
  def_circle <-  circleFundef(c(20,49.5), 26, start=1.5, end=2.5)
  att_circle <-  circleFunatt(c(124,49.5), 26, start=1.5, end=2.5)
  
  
  ## 2. Create a plot ##
  
  output$plot1 = renderPlot({
    ggplot(values$DT, aes(x = x, y = y)) +
      geom_point(aes(color = team,
                     shape = outcome), size = 4) +
      geom_text_repel( aes(label = player), size = 6,colour = "black") +
      lims(x = c(0, 144), y = c(0, 98)) +
      theme(legend.position="bottom") +
      theme_blankPitch() +
      geom_segment(aes(x = 0, y = 0, xend = 144, yend = 0),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 98, xend = 144, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 0, xend = 0, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 144, y =0 , xend = 144, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 13, y = 0, xend = 13, yend = 98),colour = "white",linetype="solid") +   
      geom_segment(aes(x = 20, y = 0, xend = 20, yend = 98),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 45, y = 0, xend = 45, yend = 98),colour = "blue",linetype="solid") +
      geom_segment(aes(x = 65, y = 0, xend = 65, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 79, y = 0, xend = 79, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 99, y = 0, xend = 99, yend = 98),colour = "red",linetype="solid") +
      geom_segment(aes(x = 124, y = 0, xend = 124, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 131, y = 0, xend = 131, yend = 98),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 0, y = 39.5, xend = 13, yend = 39.5),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 0, y = 58.5, xend = 13, yend = 58.5),colour = "white",linetype="solid") +
      geom_segment(aes(x = 131, y = 39.5, xend = 144, yend = 39.5),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 131, y = 58.5, xend = 144, yend = 58.5),colour = "white",linetype="solid") +
      geom_segment(aes(x = 72.5, y = 45.75, xend = 72.5, yend = 52.25),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 42, xend = 4.5, yend = 42),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 56, xend = 4.5, yend = 56),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 4.5, y = 42, xend = 4.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 42, xend = 144, yend = 42),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 56, xend = 144, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 42, xend = 139.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.25),colour = "blue", size = 3) +
      geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = "red", size = 3) +
      annotate(geom="text", x= 13, y=1, label="13",color = "white", size = 6) +
      annotate(geom="text", x= 20, y=1, label="20",color = "white", size = 6) +
      annotate(geom="text", x= 45, y=1, label="45",color = "blue", size = 6) +
      annotate(geom="text", x= 65, y=1, label="65",color = "white", size = 6) +
      annotate(geom="text", x=79, y=1, label="65", color="white", size = 6) +
      annotate(geom="text", x=99, y=.1, label="45",color = "red", size = 6) +
      annotate(geom="text", x=124, y=.1, label="20",color = "white", size = 6) +
      annotate(geom="text", x=131, y=.1, label="13",color = "white", size = 6) +
      geom_path(data=def_circle, aes(x,y), colour = "white",size = 0.5) +
      geom_path(data=att_circle, aes(x,y), colour = "white",size = 0.5) 
  },height = 600, width = 750)
  
  
  
  ## 3. add new row to reactive dataframe upon clicking plot ##
  observeEvent(input$plot_click, {
    # each input is a factor so levels are consistent for plotting characteristics
    add_row <- data.frame(x = input$plot_click$x,
                          y = input$plot_click$y,
                          shot = factor(input$shot, levels = c("Left", "Right", "Fist/Punch")),
                          team = factor(input$team, levels = c("A", "B")),
                          outcome = factor (input$outcome, levels = c("Goal", "Point", "Miss")),
                          player = factor (input$player, levels = c("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                                    "14","15","16","17","18","19","20","21","22","23","24","25")))
    
    # add row to the data.frame
    values$DT <- rbind(values$DT, add_row)
  })
  
  ## 4. remove row on actionButton click ##
  observeEvent(input$rem_point, {
    rem_row <- values$DT[-nrow(values$DT), ]
    values$DT <- rem_row
  })
  
  ## 5. render a table of the growing dataframe ##
  output$table <- renderTable({
    values$DT
  })
  
  # Downloadable csv of selected dataset ----
  
  
}

shinyApp(ui, server)



---------------------------------------------------

library(shiny)
library(ggplot2)

ui <- pageWithSidebar(
  headerPanel("witnesstheanalysis.com"),
  sidebarPanel(
    radioButtons("shot", "Shot", c("Left Foot", "Right Foot", "Fist/Punch")),
    radioButtons("team", "Team:", c("A", "B")),
    radioButtons("outcome", "Outcome:", c("Goal", "Point", "Miss")),
    selectInput("player", "Player:",
                list("Player" = list("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                     "14","15","16","17","18","19","20","21","22","23","24","25"))),
    actionButton("rem_point", "Remove"),
    width = 2),
  mainPanel(
    fluidRow( 
      column(width = 5,
             plotOutput("plot1", click = "plot_click")),
      column(2,offset = 5,
             tableOutput("table")))
    
  )
)

server = function(input, output){
  
  ## 1. set up reactive dataframe ##
  values <- reactiveValues()
  values$DT <- data.frame(x = numeric (),
                          y = numeric(),
                          shot = factor(),
                          team = factor(),
                          outcome = factor(),
                          player = factor())
  
  ##1.5 theme
  
  theme_blankPitch = function(size=12) { 
    theme(
      #axis.line=element_blank(), 
      axis.text.x=element_blank(), 
      axis.text.y=element_blank(), 
      #axis.ticks.y=element_text(size=size),
      #   axis.ticks=element_blank(),
      axis.ticks.length=unit(0, "lines"), 
      #axis.ticks.margin=unit(0, "lines"), 
      axis.title.x=element_blank(), 
      axis.title.y=element_blank(), 
      legend.key.size=unit(1.2, "lines"), 
      legend.text=element_text(size=size), 
      legend.title=element_text(size=size, face="bold",hjust=0),
      #       panel.border=element_blank(), 
      panel.grid.major=element_blank(), 
      panel.grid.minor=element_blank(), 
      panel.spacing=element_blank(), 
      plot.margin=unit(c(0, 0, 0, 0), "lines"), 
      plot.title=element_text(size=size*1.2), 
      panel.background=element_rect(fill="lightgreen",colour="lightgreen"),
      strip.text.x=element_text(size=size*1))}
  
  circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] + diameter / 2 * cos(tt), 
               y = center[2] + diameter / 2 * sin(tt))
  }
  
  circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=2)
  {
    tt <- seq(start*pi, end*pi, length.out=npoints)
    data.frame(x = center[1] - diameter / 2 * cos(tt), 
               y = center[2] - diameter / 2 * sin(tt))
  }
  #### create semi circle ####
  def_circle <-  circleFundef(c(20,49.5), 26, start=1.5, end=2.5)
  att_circle <-  circleFunatt(c(124,49.5), 26, start=1.5, end=2.5)
  
  
  ## 2. Create a plot ##
  
  output$plot1 = renderPlot({
    ggplot(values$DT, aes(x = x, y = y)) +
      geom_point(aes(color = team,
                     shape = shot), size = 4) +
      lims(x = c(0, 144), y = c(0, 98)) +
      theme(legend.position="bottom") +
      theme_blankPitch() +
      geom_segment(aes(x = 0, y = 0, xend = 144, yend = 0),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 98, xend = 144, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 0, xend = 0, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 144, y =0 , xend = 144, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 13, y = 0, xend = 13, yend = 98),colour = "white",linetype="solid") +   
      geom_segment(aes(x = 20, y = 0, xend = 20, yend = 98),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 45, y = 0, xend = 45, yend = 98),colour = "blue",linetype="solid") +
      geom_segment(aes(x = 65, y = 0, xend = 65, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 79, y = 0, xend = 79, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 99, y = 0, xend = 99, yend = 98),colour = "red",linetype="solid") +
      geom_segment(aes(x = 124, y = 0, xend = 124, yend = 98),colour = "white",linetype="solid") +
      geom_segment(aes(x = 131, y = 0, xend = 131, yend = 98),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 0, y = 39.5, xend = 13, yend = 39.5),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 0, y = 58.5, xend = 13, yend = 58.5),colour = "white",linetype="solid") +
      geom_segment(aes(x = 131, y = 39.5, xend = 144, yend = 39.5),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 131, y = 58.5, xend = 144, yend = 58.5),colour = "white",linetype="solid") +
      geom_segment(aes(x = 72.5, y = 45.75, xend = 72.5, yend = 52.25),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 42, xend = 4.5, yend = 42),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 56, xend = 4.5, yend = 56),colour = "white",linetype="solid") + 
      geom_segment(aes(x = 4.5, y = 42, xend = 4.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 42, xend = 144, yend = 42),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 56, xend = 144, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 139.5, y = 42, xend = 139.5, yend = 56),colour = "white",linetype="solid") +
      geom_segment(aes(x = 0, y = 45.75, xend = 0, yend = 52.25),colour = "blue", size = 3) +
      geom_segment(aes(x =144, y = 45.75, xend = 144, yend = 52.5),colour = "red", size = 3) +
      annotate(geom="text", x= 13, y=1, label="13",color = "white", size = 6) +
      annotate(geom="text", x= 20, y=1, label="20",color = "white", size = 6) +
      annotate(geom="text", x= 45, y=1, label="45",color = "blue", size = 6) +
      annotate(geom="text", x= 65, y=1, label="65",color = "white", size = 6) +
      annotate(geom="text", x=79, y=1, label="65", color="white", size = 6) +
      annotate(geom="text", x=99, y=.1, label="45",color = "red", size = 6) +
      annotate(geom="text", x=124, y=.1, label="20",color = "white", size = 6) +
      annotate(geom="text", x=131, y=.1, label="13",color = "white", size = 6) +
      geom_path(data=def_circle, aes(x,y), colour = "white",size = 0.5) +
      geom_path(data=att_circle, aes(x,y), colour = "white",size = 0.5) 
  },height = 600, width = 750)
  
  
  
  ## 3. add new row to reactive dataframe upon clicking plot ##
  observeEvent(input$plot_click, {
    # each input is a factor so levels are consistent for plotting characteristics
    add_row <- data.frame(x = input$plot_click$x,
                          y = input$plot_click$y,
                          shot = factor(input$shot, levels = c("Left Foot", "Right Foot", "Fist/Punch")),
                          team = factor(input$team, levels = c("A", "B")),
                          outcome = factor (input$outcome, levels = c("Goal", "Point", "Miss")),
                          player = factor (input$player, levels = c("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                                    "14","15","16","17","18","19","20","21","22","23","24","25")))
    
    # add row to the data.frame
    values$DT <- rbind(values$DT, add_row)
  })
  
  ## 4. remove row on actionButton click ##
  observeEvent(input$rem_point, {
    rem_row <- values$DT[-nrow(values$DT), ]
    values$DT <- rem_row
  })
  
  ## 5. render a table of the growing dataframe ##
  output$table <- renderTable({
    values$DT
  })
  
  # Downloadable csv of selected dataset ----

  
}

shinyApp(ui, server)
