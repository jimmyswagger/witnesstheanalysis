
#runA <- run%>%filter(Teamnum=="A",keep=="Y", zone <9.9, xend > Areax)

runA <- run%>%group_by (Pitch_Area) %>% filter(Teamnum=="A",keep=="Y")

runApass <- runA%>%filter(main %in% c("Pass Op","Pass Rs")|subsetoc == "Pass ToL")
runAcarr <- runA%>%filter(seg %in% c("0","2"),dist > 9.99 )

a <- runApass %>% group_by(vec_col) %>% summarise(count = n ())

sega <- data.frame(vec_col = c(1, 2, 3, 4,5,6,7,8,9,10),
                   x = c(1, 2, 3, 4,5,6,7,8,9,10))

sega$vec_col <- as.factor(sega$vec_col)

# use left_join
df3 <- left_join(sega,a, by = NULL)

# rename and set NAs to 0
#names(df3) <- c("id", "val", "val")
df3[is.na(df3)] <- 0


df3$vec_col <- as.numeric(df3$vec_col)

plot <- ggplot(df3, aes(vec_col, count, fill = vec_col)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
scale_x_continuous(labels = df3$vec_col, breaks = df3$vec_col) +
  scale_y_continuous(breaks = 0:nlevels(df3$count)) +
  theme(axis.ticks = element_blank(),
        axis.text = element_blank(),
        axis.line = element_blank(),
        axis.title = element_blank())
plot 

plot + coord_polar() 

plot <- ggplot(df3, aes(vec_col, count, fill = vec_col)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
scale_x_continuous(labels = df3$vec_col, breaks = df3$vec_col) +
  scale_y_continuous(breaks = 0:nlevels(df3$count)) +
theme_void() + 
 theme(plot.title = element_text(hjust=0.5, color="black"),
          plot.background = element_rect(fill = "transparent",colour = NA),
          panel.background = element_rect(fill = "transparent",colour = NA),
          legend.position = "none") +
  coord_polar() 




-----
ggplot(df3, aes(vec_col, count, fill = count)) +
  geom_bar(width = 1, stat = "identity", color = "white") +
scale_x_continuous(labels = df3$vec_col, breaks = df3$vec_col) +
scale_y_continuous(breaks = 0:nlevels(a$count)) +
coord_polar(start=3.5, direction=-1)+
geom_text(data = df3, aes(label = count), size = 3,colour = "black") +
  theme_gray() +
  theme(axis.ticks = element_blank(),
        axis.text = element_blank(),
        axis.line = element_blank(),
        axis.title = element_blank())





ggplot(df3, aes(seg, count, fill = seg)) + geom_bar(aes(x=seg, y=count, fill=count), stat="identity")+
    scale_y_continuous(limits=c(0,1))+
    coord_polar(start=pi, direction=1)+
    scale_fill_viridis("Distance (yards)", limits=c(0,30), na.value="#FDE725FF")+
    labs(x='', y='',title=plot.data$player.name[1])+
    theme_void()+
    theme(plot.title = element_text(hjust=0.5, color=text_color),
          plot.background = element_rect(fill = "transparent",colour = NA),
          panel.background = element_rect(fill = "transparent",colour = NA),
          legend.position = "none")


-------------------------------------
p <- list()
for(i in 1:4){
  p[[i]] <- qplot(1:10,10:1,main=i)
}
do.call(grid.arrange,p)

game.players=teamsheet$ply[[1]]

xy.list <- as.list(as.data.frame(t(teamsheet$ply)))

p <- list()
for(i in (xy.list)){
  p[[i]] <- qplot(1:10,10:1,main=i)
}
do.call(grid.arrange,p)


xy.list <- as.list(as.data.frame(teamsheet(ply)))

---

# filtrar y crea una lista 
teamsheetA <- teamsheet %>% filter (Teamnum == "A")

players=unique(teamsheetA$ply)

xy.list <- as.list(teamsheetA$ply)

# encentra cuál jugador es en una lista

Dubden <-  pass %>%group_by(Player, main, .drop=TRUE)%>%filter( Teamnum == "A", Player == players [8], main %in%  c("PW", "Pass Op", "Pass Rs","Shot Op", "Shot Rs",
"Ko Rec","Rec Op", "Rec Rs", "Free Won","Free Loss","Def Act","Spoil Off", "Ko"))

p +
geom_point(data = Dubden , aes(x=Areax, y=Areay, colour = Player), size = 10)


# necesitar una lista desde la
hoja de equipo
# limpiar las data y crear sonar gráficos. ver si podrían usarse para estadísticas de jugadores

passa <-  teamsheet %>%filter( Teamnum == "A")

game.players = (passa$ply)

player.plots =list()
for (i in 1:length(game.players)){ 

plot.data= pass %>%group_by (Player) %>%filter(main %in% c( "PW", "Pass Op"), Player ==game.players[i]) %>%summarise (count = n())

player.plots[[i]] <- ggplot(data = plot.data, aes(x = Player, y = count, fill = Player)) + 
geom_bar(width=.7, stat = "identity", aes(x = Player, y = count, fill = Player), position = "dodge")

player.plots[[i]]=ggplotGrob(player.plots[[i]])}

 back.line=20
  mid.line=48
  forward.line=77
radar.size=27
ymax=80
xmax=120

 p + annotation_custom(grob=player.plots[[1]], xmin=-9, xmax=-9+radar.size, ymax=ymax/2+radar.size/2-1.5, y=ymax/2-radar.size/2-1.5)+ #GK
    annotation_custom(grob=player.plots[[2]], xmin=back.line+3, xmax=back.line+3+radar.size, ymax=ymax+1, y=ymax-radar.size+1)+ #RB
    annotation_custom(grob=player.plots[[8]], xmin=forward.line+3, xmax=forward.line+3+radar.size, ymax=-3+radar.size, y=-3)


