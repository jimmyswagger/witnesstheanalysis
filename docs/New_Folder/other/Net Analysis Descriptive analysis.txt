#Network Analysis - Descriptive analysis
watch for which need to be directed (T) or undirected (F)
#ascending -sort(-betweenness(netB, directed=F, weights=NA, normalized = T)) 

###Strength in
```{r}
sort (strength(netA, mode="in"))
```

###In Degree
```{r}
-sort(-degree(netA, mode="in"))
```
###Out Degree
```{r}
-sort(-degree(netA, mode="out"))
```
###Strength in
```{r}
sort (strength(netA, mode="in"))
```
###Strength Out
```{r}
sort(strength(netA, mode="out"))
```
###Betweenness Centrality
```{r}
-sort(-betweenness(netA, directed=F, weights=NA, normalized = T))
```
###Entropy
```{r}
diversity(netA)
```
###Closeness Centrality
```{r}
-sort(-closeness(netA, mode="all", weights=NA, normalized=T))
```
###Global clustering coefficient
```{r}
transitivity(netA)
```
###eigen_centrality
```{r}
-sort(-eigen_centrality(netA)$vector)
```
-------------------------------------------------------
###Out Degree
```{r}
-sort(-degree(netB, mode="out"))
```
###Strength Out
```{r}
sort(strength(netA, mode="all"))
```
###Betweenness Centrality
```{r}
-sort(-betweenness(netB, directed=F, weights=NA, normalized = T))
```
###Entropy
```{r}
diversity(netB)
```
###Closeness Centrality
```{r}
-sort(-closeness(netB, mode="all", weights=NA, normalized=T))
```
###Global clustering coefficient
```{r}
transitivity(netB)
```
###eigen_centrality
```{r}
-sort(-eigen_centrality(netB)$vector)
```

====================================================================================
Degree Centrality
degree(netA, mode="all")
degree(netA, mode="in")
degree(netA, mode="out")

Strength
sort(strength(netA, mode="all"))
sort(strength(netA, mode="in"))
sort(strength(netA, mode="out"))

Closeness Centrality
closeness(netA, mode="all", weights=NA, normalized=T)
closeness(netA, mode="in", weights=NA, normalized=T)
closeness(netA, mode="out", weights=NA, normalized=T)

Betweenness Centrality
betweenness(netA, directed=F, weights=NA, normalized = T)

# Global clustering coefficient
transitivity(graph)
# Average clustering coefficient
transitivity(graph, type = "average")
# The same as above
mean(transitivity(graph, type = "local"), na.rm = TRUE)

eigen_centrality
(eigen_centrality(netA)$vector)

#entropy
diversity(netA)

Page Rank
(page_rank(netA)$vector)


Communities
Connected components
components(netA)

par(mar=c(0,0,0,0)); plot(netA)


giant <- decompose(netA)[[1]]
cluster_walktrap(giant)

cluster_walktrap(giant, steps=10)

V(giant)$color <- membership(comm)
par(mar=c(0,0,0,0)); plot(giant)



netaa<- as.data.frame(closeness(netA, mode="in", weights=NA, normalized=T))

