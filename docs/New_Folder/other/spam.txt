
library(shiny)
library(ggplot2)
library(ggrepel)
library(DT)

pass <- read.csv(file="c:/Users/donag/OneDrive/Spreadsheet fun/PA Analytics/PA Template/anyall.csv", header=TRUE, sep=";")
attach (pass)

ui <- basicPage(
  h2("The mtcars data"),
  DT::dataTableOutput("mytable")
)

server <- function(input, output) {
  output$mytable = DT::renderDataTable({
    pass
  })
}

shinyApp(ui, server)

ui <- basicPage(
  plotOutput("plot1", click = "plot_click"),
  verbatimTextOutput("info")
)

server <- function(input, output) {
  output$plot1 <- renderPlot({
    plot(mtcars$wt, mtcars$mpg)
  })

  output$info <- renderPrint({
    # With base graphics, need to tell it what the x and y variables are.
    nearPoints(mtcars, input$plot_click, xvar = "wt", yvar = "mpg")
    # nearPoints() also works with hover and dblclick events
  })
}

shinyApp(ui, server)

create_Stats_Pitch <- function(grass_colour, line_colour, background_colour, goal_colour, BasicFeatures){
  
  theme_blankPitch = function(size=12) { 
    theme(
      #axis.line=element_blank(), 
      axis.text.x=element_blank(), 
      axis.text.y=element_blank(), 
      #axis.ticks.y=element_text(size=size),
      #   axis.ticks=element_blank(),
      axis.ticks.length=unit(0, "lines"), 
      #axis.ticks.margin=unit(0, "lines"), 
      axis.title.x=element_blank(), 
      axis.title.y=element_blank(), 
      legend.background=element_rect(fill=background_colour, colour=NA), 
      legend.key=element_rect(colour=background_colour,fill=background_colour), 
      legend.key.size=unit(1.2, "lines"), 
      legend.text=element_text(size=size), 
      legend.title=element_text(size=size, face="bold",hjust=0),
      strip.background = element_rect(colour = background_colour, fill = background_colour, size = .5),
      panel.background=element_rect(fill=background_colour,colour=background_colour), 
      #       panel.border=element_blank(), 
      panel.grid.major=element_blank(), 
      panel.grid.minor=element_blank(), 
      panel.spacing=element_blank(), 
      plot.background=element_blank(), 
      plot.margin=unit(c(0, 0, 0, 0), "lines"), 
      plot.title=element_text(size=size*1.2), 
      strip.text.y=element_text(colour=background_colour,size=size,angle=270),   
      strip.text.x=element_text(size=size*1))}
  
  ymin <- 0.5 # minimum width
  ymax <- 5.5 # maximum width
  xmin <- 0.5 # minimum length
  xmax <- 7.5 # maximum length
  
  # Defining features along the length
  defel <- 0.5
  def14 <- 1.25
  def21 <- 1.5
  def45 <- 2.5
  def65 <- 3.5
  off65 <- 4.5
  off45 <- 5.5
  off21 <- 6.5
  off14 <- 6.75
  offel <- 7.5
  
  
  
  # Defining features along the width
  srwing <- 1.5
  frightwing <- 5
  rhalfsp <- 2.5
  ctre <- 3.5
  lhspce <- 4.5
  leftwing <- 5.5
  right14d <- 2.6
  left14d <- 3.4
  
  
  # Defining features along the width
  
  boxEdgeOff <- 6.75  
  boxEdgeLeft <- 2.6 
  boxEdgeRight <- 3.4 
  
  # small sqaure
  
  sixYardDef <- 0.75
  sixYardOff <- 7.25
  sixYardLeft <- 2.70 
  sixYardRight <- 3.3
  
  
  
  if(BasicFeatures == TRUE){
    ## initiate the plot, set some boundries to the plot
    p <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin,ymax)) +
      # add the theme 
      theme_blankPitch() +
      # add halway line
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) + 
      geom_segment(aes(x = def14, y = ymin, xend = def14, yend = ymax),colour = "white",linetype="solid") +   
      geom_segment(aes(x = def21, y = ymin, xend = def21, yend = ymax),colour = "white",linetype="solid") + 
      geom_segment(aes(x = def45, y = ymin, xend = def45, yend = ymax),colour = "blue",linetype="solid") +
      geom_segment(aes(x = def65, y = ymin, xend = def65, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off65, y = ymin, xend = off65, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off45, y = ymin, xend = off45, yend = ymax),colour = "red",linetype="solid") +
      geom_segment(aes(x = off21, y = ymin, xend = off21, yend = ymax),colour = "white",linetype="solid") +
      geom_segment(aes(x = off14, y = ymin, xend = off14, yend = ymax),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmin, y = right14d, xend = def14, yend = right14d),colour = "white",linetype="solid") + 
      geom_segment(aes(x = xmin, y = left14d, xend = def14, yend = left14d),colour = "white",linetype="solid") +
      geom_segment(aes(x = xmin, y = srwing, xend = xmax, yend = srwing),colour = line_colour,linetype="dotted") + 
      geom_segment(aes(x = xmin, y = srwing, xend = xmax, yend = srwing),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = rhalfsp, xend = xmax, yend = rhalfsp),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = ctre , xend = xmax, yend = ctre),colour = line_colour,linetype="dotted") +
      geom_segment(aes(x = xmin, y = lhspce, xend = xmax, yend = lhspce),colour = line_colour,linetype="dotted") + 
      geom_rect(aes(xmin=boxEdgeOff, xmax=xmax, ymin=boxEdgeLeft, ymax=boxEdgeRight), colour = "white", fill = grass_colour) + 
      geom_rect(aes(xmin=xmin, xmax=sixYardDef, ymin=sixYardLeft, ymax=sixYardRight), fill = grass_colour, colour = "white") +  
      geom_rect(aes(xmin=sixYardOff, xmax=xmax, ymin=sixYardLeft, ymax=sixYardRight), fill = grass_colour, colour = "white") + 
      geom_segment(aes(x = 4, y = 2.90, xend = 4, yend = 3.10),colour = "white") +
      geom_segment(aes(x =0.5, y = 2.75, xend = 0.5, yend = 3.25),colour = "blue", size = 2) +
      geom_segment(aes(x =7.5, y = 2.75, xend = 7.5, yend = 3.25),colour = "red", size = 2) +
      annotate(geom="text", x= 1.50, y=.57, label="21",color = "white") +
      annotate(geom="text", x= 2.50, y=.57, label="45",color = "blue") +
      annotate(geom="text", x= 3.50, y=.57, label="65",color = "white") +
      annotate(geom="text", x= 4.50, y=.57, label="65",color = "white") +
      annotate(geom="text", x=5.50, y=.57, label="45", color="red") +
      annotate(geom="text", x=6.50, y=.57, label="21",color = "white") +
      annotate("segment", x = 3.5, xend = 4.5, y = 0.75, yend = 0.75, colour = "pink", size=3, alpha=0.6, arrow=arrow()) +
                 annotate(geom="text", x= 1.5, y=.75, label="witnesstheanalysis.com",color = "black",size = 8, alpha = 0.4)
    
  }
  
  else{
    ## initiate the plot, set some boundries to the plot
    p <- ggplot() + xlim(c(xmin,xmax)) + ylim(c(ymin-0.5,ymax+0.5)) +
      # add the theme 
      theme_blankPitch() +
      # add the base rectangle of the pitch 
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) +
      geom_rect(aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill = grass_colour, colour = line_colour) +
      geom_segment(aes(x = off65, y = ymin, xend = off65, yend = ymax),colour = line_colour) +
      geom_segment(aes(x = off45, y = ymin, xend = off45, yend = ymax),colour = "Red",linetype="dotted")
    
  }
  
  return(p)}


p <- create_Stats_Pitch("#A2CD5A", "black", "#ffffff", "#000000", BasicFeatures=TRUE)








p + geom_point(data = pass, aes(x=Areax, y=Areay, colour = octype, size = 8, shape = Action, stroke = 1.5)) + 
 scale_colour_manual(values = colshotvertpal) +
  geom_text_repel(data = shotsA, aes(x=Areax, y=Areay, label = plylabrec, col = octype), size = 8) +
    scale_shape_manual(values = 0:18) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=20)) +
    theme(plot.title = element_text(hjust=0.5)) +
    theme(plot.subtitle = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    guides(shape = guide_legend(override.aes = list(size = 12)))


sp + geom_point(data = pass, aes(x=Areax, y=Areay, colour = octype, shape = octype, stroke = 1), size = 2) + 
 scale_colour_manual(values = colshotvertpal) +
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=8)) +
    theme(plot.title = element_text(hjust=0.5)) +
    theme(plot.subtitle = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    scale_shape_manual(values= palspatt) +
    guides(shape = guide_legend(override.aes = list(size = 8)))

p + geom_point(data = pass, aes(x=Areax, y=Areay, colour = Team, shape = octype, stroke = 1), size = 2) + 
    theme(legend.position="bottom", legend.title=element_text(size=15), 
          legend.text=element_text(size=8)) +
    theme(plot.title = element_text(hjust=0.5)) +
    theme(plot.subtitle = element_text(hjust=0.5)) +
    guides(color = FALSE, size = FALSE) +
    scale_shape_manual(values= palspatt) +
    guides(shape = guide_legend(override.aes = list(size = 8)))


pass <- read.csv(file="c:/Users/donag/OneDrive/Spreadsheet fun/PA Analytics/PA Template/anyall.csv", header=TRUE, sep=";")
attach (pass)

palspatt <- c("scr" = 16,
"miss"  = 16)


colshotvertpal <- c(
"scr"= "white",
"miss"= "red"),
"Wide Left"="purple",
"Wide Right"="#FF6347",
"Save"="#FFFF00",
"Blkd"="#00FFFF",
"Short"="#FF00FF",
"scr"="darkblue",
"Fk Goal"= "#FFFFFF",
"Fk Point"="#800000",
"Fk Wide Left"="#808000",
"Fk Wide Right"="#D2691E",
"Fk Save"="#800080",
"Fk Short"="#008080",
"miss"="#000080",
"45 Goal"="#FFFFFF",
"45 Point"="darkred",
"45 Wide Left"="#808080",
"45 Wide Right"="#000000",
"45 Save"="#FF0000",
"45 Short"="#800000",
"45 Post"="yellow",
"Pen Goal" ="#619CFF",
"Pen Point"="#00BA38",
"Pen Wide Left"="#F8766D",
"Pen Wide Right"="#FF9326",
"Pen Save"="#FFFF4D",
"Pen Post"="#21D921",
"Mk Goal"="#D92121",
"Mk Point"="blue",
"Mk Wide Left"="gold",
"Mk Wide Right"="orange",
"Mk Short"="red",
"Mk Save"="#2121D9")