library(shiny)
library(ggplot2)
library(ggrepel)

ui <- pageWithSidebar(

    ## Add a header ##
    headerPanel("witnesstheanalysis.com"),
    
    ##Add to the side panel ##
    sidebarPanel(
        radioButtons("team", "Team:", c("A", "B")),
        radioButtons("action", "Action", c("Pass", "Rec", "Pass Loss","Shot","Goal", "Miss", "Saved")),
        selectInput("player", "Player:",
                    list("Player" = list("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                         "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","p"))),
        selectInput("time", "Time:",
                    list("time" = list("0","1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                       "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42",
                                       "43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58",
                                       "59","60","61","62","63","64","65","66","67","68","69","70",
                                       "71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","Inj Time"))),
        actionButton("rem_point", "Remove"),
        downloadButton("dlPlot", "Download Plot"),
        downloadButton("dlTab", "Download Table"),
        width = 2),
    ## this part sets where the different parts are placed ##
    mainPanel(
        fluidRow( 
            column(width = 5,
                   plotOutput("plot1", click = "plot_click")),
            column(2,offset = 5,
                   tableOutput("table")))
        
    )
)

server = function(input, output){
    
    ## 1. set up reactive dataframe ##
    
    values <- reactiveValues()
    values$DT <- data.frame(
        action = factor(),
        team = factor(),
        player = factor(),
        time = factor (),
        x = numeric (),
        y = numeric(),
        actionoc = factor(),
        teamoc = factor(),
        playeroc = factor(),
        timeoc = factor (),
        xoc = numeric (),
        yoc = numeric())
    
    ## 1.5 Create the themes for the pitch ##
    
    theme_blankPitch = function(size=12) { 
        theme(
            axis.text.x=element_blank(), 
            axis.text.y=element_blank(), 
            axis.ticks.length=unit(0, "lines"), 
            axis.title.x=element_blank(), 
            axis.title.y=element_blank(), 
            legend.key.size=unit(1.2, "lines"), 
            legend.text=element_text(size=size), 
            legend.title=element_text(size=size, face="bold",hjust=0),
            panel.grid.major=element_blank(), 
            panel.grid.minor=element_blank(), 
            panel.spacing=element_blank(), 
            plot.margin=unit(c(0, 0, 0, 0), "lines"), 
            plot.title=element_text(size=size*1.2), 
            panel.background=element_rect(fill="lightgreen",colour="lightgreen"),
            strip.text.x=element_text(size=size*1))}
    
    
    
    circleFundef <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=1)
    {
        tt <- seq(start*pi, end*pi, length.out=npoints)
        data.frame(x = center[1] + diameter / 2  * cos(tt), 
                   y = center[2] + diameter / 2 * sin(tt))
    }
    
    
    circleFunatt <- function(center=c(0,0), diameter=1, npoints=100, start=0, end=1)
    {
        tt <- seq(start*pi, end*pi, length.out=npoints)
        data.frame(x = center[1] - diameter / 2 * cos(tt), 
                   y = center[2] - diameter / 2 * sin(tt))
    }
    
    
    circleFuncent <- function(center=c(0,0), diameter=2, npoints=1000, start=0, end=2)
    {
        r = diameter / 2
        tt <- seq(0,2*pi,length.out = npoints)
        x <- center[1] + r * cos(tt)
        y <- center[2] + r * sin(tt)
        return(data.frame(x = x, y = y))
    }
    
    # create penalty semi circle with help from https://github.com/FCrSTATS/Visualisations/blob/master/3.CreateAPitch.md
    def_circle <-  circleFundef(c(13,34), 14, start=1.5, end=2.5)
    def_circle <- def_circle[which(def_circle$x >= (16.5)),]
    att_circle <-  circleFunatt(c(92,34), 14, start=1.5, end=2.5)
    att_circle <- att_circle[which(att_circle$x <= (88.5)),]
    cent_circle <-  circleFuncent(c(52.5,34), 18, start=1.5, end=2.5)
    
    ## Set the shapes for the for the actions ## 
    
    ocome <- c(
               "Pass"= 16,
               "Shot" = 17,
               "Rec" = 19,
               "Goal"= 15,
               "Miss"= 4,
               "Saved" = 17,
               "Pass Loss"= 4)
    
    ## and the colours for the teams ##
    
    teamcol <- c("A" = "red",
                 "B" = "blue")
    
    ## 2. Create a pitch ##
    output$plot1 = renderPlot({
        ggplot(values$DT, aes(x = x, y = y)) +
            geom_point(aes(color = team,
                           shape = action), size = 2, stroke = 2) +
            geom_text_repel( aes(label = player), size = 4,colour = "black") +
            geom_segment( aes(x= x, y= y, xend = xoc, yend = yoc), 
                         colour = "black", size = 0.8,arrow = arrow(length = unit(0.8,"cm")),show.legend = FALSE) +
            lims(x = c(0, 105), y = c(0, 68)) +
            theme(legend.position="bottom") +
            theme_blankPitch() +
            #pitch 
            geom_segment(aes(x = 0, y = 0, xend = 105, yend = 0),colour = "white",linetype="solid") +
            geom_segment(aes(x = 0, y = 68, xend = 105, yend = 68),colour = "white",linetype="solid") +
            geom_segment(aes(x = 0, y = 0, xend = 0, yend = 68),colour = "white",linetype="solid") +
            geom_segment(aes(x = 105, y =0 , xend = 105, yend = 68),colour = "white",linetype="solid") +
            #horbox
            geom_segment(aes(x = 5.5, y = 24.85, xend = 5.5, yend = 43.15),colour = "white",linetype="solid",size = 0.5) +   
            geom_segment(aes(x = 99.5, y = 24.85, xend = 99.5, yend = 43.15),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 16.5, y = 13.85, xend = 16.5, yend = 54.15),colour = "white",linetype="solid",size = 0.5) +
            geom_segment(aes(x = 88.5, y = 13.85, xend = 88.5, yend = 54.15),colour = "white",linetype="solid",size = 0.5) + 
            #vertsbox
            geom_segment(aes(x = 0, y = 24.82, xend = 5.5, yend = 24.82),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 0, y = 43.15, xend = 5.5, yend = 43.15),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 105, y = 24.82, xend = 99.5, yend = 24.82),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 105, y = 43.15, xend = 99.5, yend = 43.15),colour = "white",linetype="solid",size = 0.5) + 
            #vertbbox
            geom_segment(aes(x = 0, y = 13.85, xend = 16.5, yend = 13.85),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 0, y = 54.15, xend = 16.5, yend = 54.15),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 105, y = 13.85, xend = 88.5, yend = 13.85),colour = "white",linetype="solid",size = 0.5) + 
            geom_segment(aes(x = 105, y = 54.15, xend = 88.5, yend = 54.15),colour = "white",linetype="solid",size = 0.5) + 
            #halfway
            geom_segment(aes(x = 52.5, y = 0, xend = 52.5, yend = 68),colour = "white",linetype="solid",size = 0.5) +
            geom_segment(aes(x = 52.3, y = 34, xend = 52.8, yend = 34),colour = "white",linetype="solid",size = 0.5) +
            #pen spots
            geom_segment(aes(x = 11, y = 33.8, xend = 11, yend = 34.2),colour = "white",linetype="solid",size = 0.5) +
            geom_segment(aes(x = 94, y = 33.8, xend = 94, yend = 34.2),colour = "white",linetype="solid",size = 0.5) +
            #pen semi circles
            geom_path(data=def_circle, aes(x,y), colour = "white",size = 0.5) + 
            geom_path(data=att_circle, aes(x,y), colour = "white",size = 0.5) +
            #goals
            geom_segment(aes(x = 0, y =  30.35, xend = 0, yend = 37.65),colour = "blue", size = 1) +
            geom_segment(aes(x =105, y =  30.35, xend =105, yend = 37.65),colour = "red", size = 1) +
            #circle
            geom_path(data=cent_circle, aes(x,y), colour = "white",size = 0.5) +
            annotate(geom="text", x= 15, y=2, label="www.witnesstheanalysis.com",color = "white",size = 4, alpha = 0.4) +
            annotate(geom="text", x= 90, y=66, label="www.witnesstheanalysis.com",color = "white",size = 4, alpha = 0.4) + 
            scale_shape_manual(values = ocome) +
            scale_colour_manual(values = teamcol)
           
    },height = 600, width = 750)

    
    ## 3. add new row to reactive dataframe upon clicking plot ##
    
    observeEvent(input$plot_click, {
        # each input is a factor so levels are consistent for plotting characteristics
        add_row <- data.frame(
            action = factor(input$action, levels = c("Pass", "Rec", "Pass Loss","Shot","Goal", "Miss", "Saved")),
            team = factor(input$team, levels = c("A", "B")),
            player = factor (input$player, levels = c("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                      "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","p")),
            time = factor (input$time, levels = c("0","1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                  "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42",
                                                  "43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58",
                                                  "59","60","61","62","63","64","65","66","67","68","69","70",
                                                  "71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","Inj Time")),
        
            x = input$plot_click$x,
            y = input$plot_click$y,
            
            actionoc = factor(input$action, levels = c("Pass", "Rec", "Pass Loss","Shot","Goal", "Miss", "Saved")),
            teamoc = factor(input$team, levels = c("A", "B")),
            playeroc = factor (input$player, levels = c("1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                      "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","p")),
            timeoc = factor (input$time, levels = c("0","1", "2", "3","4","5","6","7","8","9","10","11","12","13",
                                                  "14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42",
                                                  "43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58",
                                                  "59","60","61","62","63","64","65","66","67","68","69","70",
                                                  "71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","Inj Time")),
            
            xoc = input$plot_click$x,
            yoc = input$plot_click$y)
        
        # add row to the data.frame
        values$DT <- rbind(values$DT, add_row)
    })
    
    ## 4. remove row on actionButton click ##
    observeEvent(input$rem_point, {
        rem_row <- values$DT[-nrow(values$DT), ]
        values$DT <- rem_row
    })
    
    ## 5. render a table of the growing dataframe ##
    output$table <- renderTable({
        values$DT
    })
    
    # Downloadable csv of selected dataset ----
    
    output$dlPlot <- downloadHandler(
        filename="Plot_Download.jpg",
        content=function(file){
            ggsave(file, device = "jpeg")
        }
    )
    
    output$dlTab <- downloadHandler(
        filename="Table_Download.csv",
        content=function(file){
            write.csv(x=values$DT, file=file)
        }
    )
    
}

shinyApp(ui, server)

